#### phpMyAdmin

http://127.0.0.1:8081

#### Nginx

http://127.0.0.1:8080

#### Laravel

    $ sudo nano /etc/hosts
    127.0.0.1   localhost.jy.laravel
    127.0.0.1   localhost.nrh.laravel

http://localhost.nrh.laravel:8080

### Docker

$ docker exec -it CONTAINER_NAME bash
$ docker exec -it nrh_grh_php_fpm bash
    $ cd laravel && chmod go+w -R storage 

$ docker logs CONTAINER_NAME

$ docker stop $(docker ps -q)

### Add helpers.php

$ composer dumpautoload


#### Request

$ php artisan make:request StoreUserRequest
$ php artisan make:request UpdateUserRequest

$ php artisan make:request StoreProjectRequest
$ php artisan make:request UpdateProjectRequest

$ php artisan make:request StoreBacklogRequest
$ php artisan make:request UpdateBacklogRequest

$ php artisan make:request StoreSprintRequest
$ php artisan make:request UpdateSprintRequest

$ php artisan make:request StoreTaskRequest
$ php artisan make:request UpdateTaskRequest

$ php artisan make:request StoreColumnRequest
$ php artisan make:request UpdateColumnRequest

$ php artisan make:request StoreAffectationRequest
$ php artisan make:request UpdateAffectationRequest


#### MODEL

[ Exemple ]
$ php artisan make:model Employee -mfs

$ php artisan make:model User -mfs
$ php artisan make:model Project -mfs
$ php artisan make:model Backlog -mfs
$ php artisan make:model Sprint -mfs
$ php artisan make:model Task -mfs
$ php artisan make:model Column -mfs
$ php artisan make:model Affectation -mfs

#### Controller

[ Exemple ]
$ php artisan make:controller UserController --resource --model=User
$ php artisan make:controller ProjectController --resource --model=Project
$ php artisan make:controller BacklogController --resource --model=Backlog
$ php artisan make:controller SprintController --resource --model=Sprint
$ php artisan make:controller TaskController --resource --model=Task
$ php artisan make:controller ColumnController --resource --model=Column
$ php artisan make:controller AffectationController --resource --model=Affectation

#### Migration

[ Exemple ]
$ php artisan make:migration alter_users_add_keyforeign_employee

$ php artisan make:migration alter_sprints_add_keyforeign
$ php artisan make:migration alter_backlogs_add_keyforeign
$ php artisan make:migration alter_tasks_add_keyforeign

### Package

[ https://laravel.com/docs/9.x/starter-kits#laravel-breeze ]
$ composer require laravel/breeze --dev

$ php artisan breeze:install || $ php artisan breeze:install react

$ php artisan migrate
$ npm install && npm run dev

$ composer require barryvdh/laravel-debugbar --dev


########################### TDL

Seed

Page Login
Page Liste des Project
   Modal CRUD Project
Page Backlog et Sprint
   Modal CRUD Project
Page TaskBoard
Page Chart
Page Roadmap
   

route('dashboard')

nav-link dropdown-toggle show

$ php artisan make:controller ChartController
$ php artisan make:controller TaskBoardController
$ php artisan make:controller RoadmapController
$ php artisan make:controller BacklogController


#### Inertia

import React from 'react'
import { useForm } from '@inertiajs/inertia-react'

const { data, setData, post, processing, errors } = useForm({
  email: '',
  password: '',
  remember: false,
})

function submit(e) {
  e.preventDefault()
  post('/login')
}

return (
  <form onSubmit={submit}>
    <input type="text" value={data.email} onChange={e => setData('email', e.target.value)} />
    {errors.email && <div>{errors.email}</div>}
    <input type="password" value={data.password} onChange={e => setData('password', e.target.value)} />
    {errors.password && <div>{errors.password}</div>}
    <input type="checkbox" checked={data.remember} onChange={e => setData('remember', e.target.checked)} /> Remember Me
    <button type="submit" disabled={processing}>Login</button>
  </form>
)


                            <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} showTimeSelect
  dateFormat="Pp" dateFormat="yyyy/MM/dd" />
  
##########################################################




import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";

<DatePicker selected={startDate} onChange={(date) => setStartDate(date)} showTimeSelect dateFormat="dd/MM/yyyy" />


### Modal

/resources/js/Pages/Modals/Index.js

app/Http/Controllers/ModalController.php

routes/web.php

resources/js/Shared/MainMenu.js

resouces/js/Shared/Modals/Modal.js
resouces/js/Shared/Modals/ModalWithButtons.js

app/Http/Controllers/OrganizationsController.php

/resources/js/Pages/Organizations/Index.js

Cotisse Antananarivo         
032 11 027 10             
032 11 027 33

####################

ManyToMany

$category = Category::find([3, 4]);
$product->categories()->attach($category);

$category = Category::find(3);
$product->categories()->detach($category);

$user->roles()->toggle([1, 2, 3]);


Affectation ==> Task 
task_id         id
user_id         sprint_id

### Contributions

SELECT COUNT(DISTINCT affectation.user_id) contributions from nrh_affectations affectation inner join nrh_tasks task ON affectation.task_id = task.id WHERE task.sprint_id = 1; 

SELECT SUM(task.pointStory) pointStory from nrh_tasks task WHERE task.sprint_id = 1; 

DB::table('users)->selectRaw('count(*) as user_count, status')
->where('status', 1)
->groupBy('status')
->get()


feat/demo-1 [ Marche ]
feat/demo-3 [ Marche ]


                        isDropDisabled={false}
                        
                        columncolumn


{
  "draggableId": "Do",
  "type": "DEFAULT",
  "source": {
    "index": 1,
    "droppableId": "COLUMNS"
  },
  "reason": "DROP",
  "mode": "FLUID",
  "destination": null,
  "combine": null
}

### Structure

[
 {
   id: 1,
   name: 'column',
   tasks: [
     {
       id: 1,
       name: 'task'
     }
   ]
 }
]



                events={[
                    { title: "event 1", date: "2022-11-09" },
                    { title: "event 2", date: "2022-11-05" },
                    {
                        title: 'my event',
                        start: '2022-11-01',
                        end: '2022-11-07',
                        backgroundColor: 'red'
                      }
                ]}
























































